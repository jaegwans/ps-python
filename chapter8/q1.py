# 1로 만들기
import sys

n = int(sys.stdin.readline().rstrip())

d = [0] * 30001 # 메모이제이션 생성 , 수와 횟수를 기록

for i in range(2, n+1): # n까지 수행한다. 2부터 n 까지 수행 
    
    #뒤로 갈수록 덮어씌우기때문에 우선순위가 높음
    # +1 은 횟수이다.
    # index는 해당하는 값이고 내용은 횟수를 의미한다.
    d[i] = d[i-1] + 1 # 하나를 뺴는 경우다.
    
    if i % 2 == 0: # 2로 나누어진다면 
        d[i] = min(d[i], d[i//2] + 1) # (기존값) 과 (2로 나눈 값의 횟수 +1) 을 비교하여 더 작은 횟수값을 보낸다. 나눌시엔 +1
    
    if i % 3 == 0: # 위와 같음 
        d[i] = min(d[i], d[i//3] + 1)# 위와같음
    
    if i % 5 == 0:
        d[i] = min(d[i], d[i//5] + 1) # 위와같음
        
    #의문점 왜 2부터 시작하는가?
    # 값을 1로 만드는게 목적이고 그 말은 1의 값은 이미 존재해야한다
    #즉 위 코드는 
    # 값을 인덱스로 표기하여 메모이제이션 했으며
    # 우선순위를 덮어쓰기로 구현했고 
    # 기존 값과 덮어쓸 값+1 의 횟수 최솟값을 비교하여 바텀업 방식으로 구현되었다.
    

print(d[n])